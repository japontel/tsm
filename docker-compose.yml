version: '3.8'

services:
  # Backend Laravel service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
      - ./backend/vendor:/var/www/html/vendor
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - DB_HOST=db
      - DB_DATABASE=transactions_db
      - DB_USERNAME=user
      - DB_PASSWORD=password

  # Nginx service
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
    networks:
      - app-network

  # Frontend React service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - NODE_OPTIONS=--openssl-legacy-provider
    networks:
      - app-network

  # MySQL Database service
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: transactions_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: